FORMAT: 1A
HOST: https://affiliate.api.diablomedia.com

# Diablo Publisher API V1

API for publishers of Diablo tracking system.

# API Root [/]

Nothing to see here?

## Retrieve the Entry Point [GET]

+ Response 404 (application/api-problem+json)

        {

        }

# Group Campaigns

## Campaign Resource [/v1/campaigns/{campaign_id}{?publisher_id}]

+ Attributes (Campaign Full)

+ Parameters
    + campaign_id: 1 (required, number) - ID of the Campaign in form of an integer
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as

### View a Campaign Detail [GET]

+ Response 200 (application/hal+json)
    + Attributes (Campaign Full)

## Campaign Creatives Export [/v1/campaigns/{campaign_id}/creatives_export{?publisher_id}]

+ Parameters
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as
    + campaign_id: 1 (required, number) - ID of the Campaign to export creatives for

### Export Creatives [GET]

+ Response 200 (application/zip)

## Campaign Suppression Download [/v1/campaigns/{campaign_id}/suppression{?publisher_id}]

+ Parameters
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as
    + campaign_id: 1 (required, number) - ID of the Campaign to download the suppression file for

### Download Suppression File [GET]

+ Response 302
    + Headers

            Location: https://test.com/text.csv

## Campaigns Collection [/v1/campaigns{?category,country,page,payout_type,publisher_id,sort,traffic_type,type,visibility}]

Paged listing of all campaigns available, can be filtered by various campaign properties.

+ Parameters
    + category: test (optional, string) - The slug of a category (or categories separated by commas) to filter the results by
    + country: US (optional, string) - The "code" of a country (or several countries, separated by commas) to filter by
    + page: 1 (optional, number) - The page of campaigns to return
    + payout_type: cpa (optional, string) - Filter the results by campaign payout type (available options: "cpa", "cpc", "revshare"), separate several options with a comma
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as
    + sort: name (optional, string) - Sort the results by this field, prepend with a dash (-) to reverse the sort direction
    + traffic_type: email (optional, string) - Filter the results by campaign traffic type slug (separate by a comma to filter by multiple traffic types)
    + type: standard (optional, string) - Filter the results by campaign type (available options: "standard", "paypercall" or "coreg"), separate several options with a comma
    + visibility: all (optional, string) - Filter the results by visibility (must be one of "all", "approved", "unapproved", "pending", "running")

+ Attributes
    + count: 1 (number) - Number of results in this response
    + total: 2 (number) - Total number of results available
    + `_links` (object)
        + self (object)
            + href: https://affiliate.api.diablomedia.com/v1/campaigns?page=1 (string)
            + first: https://affiliate.api.diablomedia.com/v1/campaigns (string)
            + last: https://affiliate.api.diablomedia.com/v1/campaigns?page=2 (string)
            + next: https://affiliate.api.diablomedia.com/v1/campaigns?page=2 (string)
    + `_embedded` (object)
        + campaigns (array[Campaign Lite])

### View Campaign List [GET]

+ Response 200 (application/hal+json)
    + Attributes (Campaigns Collection)

# Group Campaign Approvals

## Campaign Approval Resource [/v1/campaign_approvals/{approval_id}{?publisher_id}]

+ Parameters
    + approval_id: 1 (required, number) - ID of the approval to fetch
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as

+ Attributes (Campaign Approval Full)

### View a Campaign Approval Detail [GET]

+ Response 200 (application/hal+json)
    + Attributes (Campaign Approval Full)

## Campaign Approval Collection [/v1/campaign_approvals{?page,publisher_id}]

+ Parameters
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as
    + page: 1 (optional, number) - Page number of results

+ Attributes
    + count: 1 (number) - Number of results in this response
    + total: 2 (number) - Total number of results available
    + `_links` (object)
        + self (object)
            + href: https://affiliate.api.diablomedia.com/v1/campaign_approvals?page=1 (string)
            + first: https://affiliate.api.diablomedia.com/v1/campaign_approvals (string)
            + last: https://affiliate.api.diablomedia.com/v1/campaign_approvals?page=2 (string)
            + next: https://affiliate.api.diablomedia.com/v1/campaign_approvals?page=2 (string)
    + `_embedded` (object)
        + `campaign_approvals` (array[Campaign Approval Full])

### List Campaign Approvals [GET]

+ Response 200 (application/hal+json)
    + Attributes (Campaign Approval Collection)

### Make an Approval Request [POST]

+ Request (application/json)

        {
            "campaign_id": 2
        }

+ Response 200 (application/hal+json)
    + Headers

            Location: https://affiliate.api.diablomedia.com/v1/campaign_approvals/1/

    + Attributes (Campaign Approval Full)

# Group Categories

## Category Collection [/v1/categories{?publisher_id}]

+ Parameters
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as

+ Attributes
    + count: 1 (number) - Number of results in this response
    + total: 2 (number) - Total number of results available
    + `_links` (object)
        + self (object)
            + href: https://affiliate.api.diablomedia.com/v1/categories (string)
    + `_embedded` (object)
        + `categories` (array[Category Full])

### List Categories [GET]

+ Response 200 (application/hal+json)
    + Attributes (Category Collection)

# Group Contacts

## Contact Resource [/v1/contacts/{contact_id}{?publisher_id}]

+ Attributes (Contact Full)

+ Parameters
    + contact_id: 1 (required, number) - ID of the Contact
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as

### View a Contact Detail [GET]

+ Response 200 (application/hal+json)
    + Attributes (Contact Full)

### Update a Contact [PUT]

+ Request (application/json)
    + Attributes (Contact Writable)

+ Response 200 (application/hal+json)
    + Attributes (Contact Full)

## Contacts Collection [/v1/contacts{?publisher_id}]

+ Parameters
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as

+ Attributes
    + count: 1 (number) - Number of results in this response
    + total: 2 (number) - Total number of results available
    + `_links` (object)
        + self (object)
            + href: https://affiliate.api.diablomedia.com/v1/contacts?page=1 (string)
            + first: https://affiliate.api.diablomedia.com/v1/contacts (string)
            + last: https://affiliate.api.diablomedia.com/v1/contacts?page=2 (string)
            + next: https://affiliate.api.diablomedia.com/v1/contacts?page=2 (string)
    + `_embedded` (object)
        + contacts (array[Contact Lite])

### View a Contact List [GET]

+ Response 200 (application/hal+json)
    + Attributes (Contacts Collection)

# Group Countries

## Country Collection [/v1/countries{?publisher_id}]

+ Parameters
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as

+ Attributes
    + count: 1 (number) - Number of results in this response
    + total: 2 (number) - Total number of results available
    + `_links` (object)
        + self (object)
            + href: https://affiliate.api.diablomedia.com/v1/countries?page=1 (string)
            + first: https://affiliate.api.diablomedia.com/v1/countries (string)
            + last: https://affiliate.api.diablomedia.com/v1/countries?page=2 (string)
            + next: https://affiliate.api.diablomedia.com/v1/countries?page=2 (string)
    + `_embedded` (object)
        + `countries` (array[Country Full])

### List Countries [GET]

+ Response 200 (application/hal+json)
    + Attributes (Country Collection)

## Country Resource [/v1/countries/{country_code}{?publisher_id}]

+ Parameters
    + publisher_id: 10000 (required, number) - ID of the Publisher account your are working as
    + country_code: US (required, string) - 2 digit ISO code for Country to fetch

+ Attributes (Country Full)

### View a Country Detail [GET]

+ Response 200 (application/hal+json)
    + Attributes (Country Resource)

# Group Creatives

## Creative Resource [/v1/creatives/{creative_id}{?publisher_id}]

+ Attributes (Creative Full)

+ Parameters
    + creative_id: 1 (required, number) - ID of the Creative in form of an integer
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as

### View a Creative Detail [GET]

+ Response 200 (application/hal+json)
    + Attributes (Creative Full)

## Creatives Collection [/v1/creatives{?campaign,page,publisher_id,sort}]

+ Parameters
    + campaign: 1 (optional, number) - Filter creatives by campaign id that they are attached to
    + page: 1 (optional, number) - The page of campaigns to return
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as
    + sort: id (optional, string) - Sort the results by this field, prepend with a dash (-) to reverse the sort direction

+ Attributes
    + count: 1 (number) - Number of results in this response
    + total: 2 (number) - Total number of results available
    + `_links` (object)
        + self (object)
            + href: https://affiliate.api.diablomedia.com/v1/creatives?page=1 (string)
            + first: https://affiliate.api.diablomedia.com/v1/creatives (string)
            + last: https://affiliate.api.diablomedia.com/v1/creatives?page=2 (string)
            + next: https://affiliate.api.diablomedia.com/v1/creatives?page=2 (string)
    + `_embedded` (object)
        + creatives (array[Creative Lite])

### View Creative List [GET]

+ Response 200 (application/hal+json)
    + Attributes (Creatives Collection)

## Export Creatives [/v1/creatives/{creative_id}/export{?publisher_id}]

+ Parameters
    + creative_id: 2 (number, required) - ID of the creative to export
    + publisher_id: 10000 (number, required) - ID of the Publisher account you are working as

### Export Creative [GET]

+ Response 200 (application/zip)
    + Body

# Group Messages

## Message Resource [/v1/messages/{message_id}{?publisher_id}]

+ Attributes (Message Full)

+ Parameters
    + message_id: 1 (required, number) - ID of the message to fetch
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as

### View a Message Detail [GET]

+ Response 200 (application/hal+json)
    + Attributes (Message Resource)

### Mark a Message as Read [PUT]

+ Request (application/json)

        {
            "id": 1,
            "read": true
        }

+ Response 200 (application/hal+json)
    + Attributes (Message Resource)

### Delete a Message [DELETE]

+ Response 204

## Message Collection [/v1/messages{?page,publisher_id}]

+ Parameters
    + publisher_id: 10000 (number, required) - ID of the Publisher account you are working as
    + page: 1 (number, optional) - Page number of results to fetch

+ Attributes
    + count: 1 (number) - Number of results in this response
    + total: 2 (number) - Total number of results available
    + `_links` (object)
        + self (object)
            + href: https://affiliate.api.diablomedia.com/v1/messages?page=1 (string)
            + first: https://affiliate.api.diablomedia.com/v1/messages (string)
            + last: https://affiliate.api.diablomedia.com/v1/messages?page=2 (string)
            + next: https://affiliate.api.diablomedia.com/v1/messages?page=2 (string)
    + `_embedded` (object)
        + messages (array[Message Lite])

### List Messages [GET]

+ Response 200 (application/hal+json)
    + Attributes (Message Collection)

# Group Pixels

## Pixel Resource [/v1/pixels/{pixel_id}{?publisher_id}]

+ Attributes (Pixel Full)

+ Parameters
    + pixel_id: 1 (required, number) - ID of the Pixel to fetch
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as

### View a Pixel Detail [GET]

+ Response 200 (application/hal+json)
    + Attributes (Pixel Full)

### Update a Pixel [PUT]

+ Request (application/json)

        {
            "pixel": "http://test.com",
            "version": 1
        }


+ Response 200 (application/hal+json)
    + Attributes (Pixel Full)

### Delete a Pixel [DELETE]

+ Response 204

## Pixels Collection [/v1/pixels{?campaign,global,page,publisher_id,sort,type}]

+ Parameters
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as

+ Attributes
    + count: 1 (number) - Number of results in this response
    + total: 2 (number) - Total number of results available
    + `_links` (object)
        + self (object)
            + href: https://affiliate.api.diablomedia.com/v1/pixels?page=1 (string)
            + first: https://affiliate.api.diablomedia.com/v1/pixels (string)
            + last: https://affiliate.api.diablomedia.com/v1/pixels?page=2 (string)
            + next: https://affiliate.api.diablomedia.com/v1/pixels?page=2 (string)
    + `_embedded` (object)
        + pixels (array[Pixel Full])

### View Pixel List [GET]

+ Parameters
    + campaign: 1 (optional, number) - Filter the results by campaign id
    + global: false (optional, boolean) - Filter the results by their global status
    + page: 1 (optional, number) - The page of campaigns to return
    + sort: id (optional, string) - Sort the results by this field, prepend with a dash (-) to reverse the sort direction
    + type: url (optional, string) - Filter the results by pixel type (url or html)

+ Response 200 (application/hal+json)
    + Attributes (Pixels Collection)

### Adding Pixels [POST]

+ Request Add a Global Pixel

            {
                "pixel": "http://test.com"
            }

+ Response 200 (application/hal+json)
    + Attributes (Pixel Full Global)

+ Request Add a Campaign Pixel

            {
                "pixel": "http://test.com",
                "campaign_id": 1
            }

+ Response 200 (application/hal+json)
    + Attributes (Pixel Full)

# Group Publishers

## Publisher Resource [/v1/publishers/{id}{?publisher_id}]

+ Parameters
    + id: 10001 (number, required) - The ID of the Publisher you want to view
    + publisher_id: 10000 (number, required) - ID of the Publisher account you are working as

+ Attributes (Publisher Full)

### View a Publisher Detail [GET]

+ Response 200 (application/hal+json)
    + Attributes (Publisher Full)

### Update a Publisher [PUT]

+ Parameters
    + id: 10000

+ Request (application/json)

        {
            "id": 10000,
            "version": 1,
            "website": "https://test.com"
        }


+ Response 200 (application/hal+json)
    + Attributes (Publisher Full)

## Publisher Manager Resource [/v1/publishers/{id}/manager{?publisher_id}]

+ Parameters
    + publisher_id: 10000 (number, required) - ID of the Publisher account you are working as
    + id: 10000 (number, required) - The ID of the Publisher whose manager you want to view

+ Attributes (Manager Full)

### View a Manager Detail [GET]

+ Response 200 (application/hal+json)
    + Attributes (Publisher Manager Resource)

# Group Traffic Types

## Traffic Type Collection [/v1/traffic_types{?publisher_id}]

+ Parameters
    + publisher_id: 10000 (required, number) - ID of the Publisher account you are working as

+ Attributes
    + count: 1 (number) - Number of results in this response
    + total: 2 (number) - Total number of results available
    + `_links` (object)
        + self (object)
            + href: https://affiliate.api.diablomedia.com/v1/traffic_types?page=1 (string)
            + first: https://affiliate.api.diablomedia.com/v1/traffic_types (string)
            + last: https://affiliate.api.diablomedia.com/v1/traffic_types?page=2 (string)
            + next: https://affiliate.api.diablomedia.com/v1/traffic_types?page=2 (string)
    + `_embedded` (object)
        + `traffic_types` (array[Traffic Type Full])

### List Traffic Types [GET]

+ Response 200 (application/hal+json)
    + Attributes (Traffic Type Collection)

# Group Transactions

## Transaction Collection [/v1/transactions{?campaign,country,creative,end,ip,page,publisher_id,sid,sort,start,trx,type}]

+ Parameters
    + publisher_id: 10000 (number,required) - ID of the Publisher account you are working as
    + campaign: 1 (number) - Filter transactions by a campaign
    + country: US (string) - Filter transactions by a country
    + creative: 1 (number) - Filter transactions by a creative id
    + end: `2015-01-31` (string) - End Date of date range, in YYYY-MM-DD format
    + ip: 123.123.* (string) - Filter transactions by an IP address (can use asterisk as a wildcard character)
    + page: 1 (number) - Page number of transactions to fetch
    + sid: 123abc* (string) - Filter transactions by SubId (can use asterisk as a wildcard character)
    + sort: created (string) - The column to sort transcations by, prefix with a dash (-) to reverse sort direction
    + start: `2015-01-01` (string) - Start Date of date range, in YYYY-MM-DD format
    + trx: kdkd* (string) - Filter transactions by Trx Id (can use asterisk as a wildcard character)
    + type: lead (string) - Filter transactions by their type, can be "lead", "click" or "call"

+ Attributes
    + count: 1 (number) - Number of results in this response
    + total: 2 (number) - Total number of results available
    + `_links` (object)
        + self (object)
            + href: https://affiliate.api.diablomedia.com/v1/transactions?page=1 (string)
            + first: https://affiliate.api.diablomedia.com/v1/transactions (string)
            + last: https://affiliate.api.diablomedia.com/v1/transactions?page=2 (string)
            + next: https://affiliate.api.diablomedia.com/v1/transactions?page=2 (string)
        + export (object)
            + href: https://affiliate.api.diablomedia.com/v1/transactions/export
    + `_embedded` (object)
        + transactions (array[Transaction Full])

### List Transactions [GET]

+ Response 200 (application/hal+json)
    + Attributes (Transaction Collection)

## Transaction Resource [/v1/transactions/{transaction_id}{?publisher_id}]

+ Parameters
    + publisher_id: 10000 (number,required) - ID of the Publisher account you are working as
    + transaction_id: L1 (string,required) - Transaction ID to fetch

+ Attributes (Transaction Full)

### View a Transaction Detail [GET]

+ Response 200 (application/hal+json)
    + Attributes (Transaction Resource)

# Data Structures

## Campaign Base (object)
+ id: 1 (number) - Campaign's Id
+ name: Campaign Name (string) - Campaign's Name
+ status: active (string) Campaign's Status ("active", "inactive")
+ thumbnail (string) URL to campaign's thumbnail image

## Campaign Minimal (Campaign Base)
+ `_links` (object)
    + self
        + href: https://affiliate.api.diablomedia.com/campaigns/1 (string)

## Campaign Lite Base (Campaign Base)
+ `approval_status`: approved (string) - Approval Status of campaign ['approved','pending','denied','not_approved']
+ categories: [] (array[Category Base]) - Array of category objects
+ created: `2010-11-05T16:01:54+00:00` (string) - An ISO8601 date when the campaign was created
+ description (string) - Campaign description, may contain HTML
+ epc: 1.00 (number) - Publisher's EPC for this campaign
+ payout: 5.00 (number) - The payout amount for this campaign (dollar amount for CPA/CPC campaigns, percentage for RevShare)
+ payout_type: CPA (string) - The payout type of the campaign (CPA, CPC, RevShare)
+ traffic_types: [] (array[Traffic Type Base]) - Array of traffic type objects
+ type: Standard (string) - Type of campaign (Standard, PayPerCall, CoReg)
+ url: https://test.com (string) - URL of the offer's home page

## Campaign Lite (Campaign Lite Base)
+ `_links` (object)
    + self
        + href: https://affiliate.api.diablomedia.com/campaigns/1 (string)

## Campaign Full (Campaign Lite Base)
+ `_embedded` (object)
    + creatives (array[Creative Minimal]) - Low density view of Campaign's creatives
    + pixels (array[Pixel Minimal]) - Low density view of Campaign's third party pixels for this publisher
+ `_links` (object)
    + `creatives_export`
        + href: https://affiliate.api.diablomedia.com/campaigns/1/creatives_export (string)
    + suppression
        + href: https://affiliate.api.diablomedia.com/campaigns/1/suppression (string)
+ countries: [] (array) - Array of country objects
+ coreg (object, optional) - If campaign is CoReg type, this will contain posting fields and instructions
    + fields (array)
    + additional_instructions (string)
    + posting_url (string)
    + sample_url (string)
+ `from_lines`: [] (array) - Array of approved Email "from" lines
+ `phone_number_limit`: 5 (number, optional) - The limit of static phone numbers this publisher is allowed to have on this campaign (PayPerCall only)
+ `phone_numbers`: [] (array, optional) - Phone numbers this publisher has created for this campaign (PayPerCall only)
+ `pixel_type`: cookie (string) - The pixel type this campaign uses (either "cookie" or "server_to_server")
+ `subject_lines`: [] (array) - Array of approved Email Subject Lines for this campaign
+ suppression (object)
    + `last_download`: `2010-11-05T16:01:54+00:00` (string, nullable) - An ISO8601 date when the suppression file was last downloaded by this publisher
    + `last_upload`: `2010-11-05T16:01:54+00:00` (string, nullable) - An ISO8601 date when a new suppression file was last uploaded

## Creative Minimal (object)
+ `_links` (object)
    + self
        + href: https://affiliate.api.diablomedia.com/campaign_approvals/1 (string)
+ id: 1 (number) - Creative's Id
+ created: `2010-11-05T16:01:54+00:00` (string) - ISO8602 date when the creative was created
+ description: This is the creative's description (string) - Description of the creative
+ type: Basic (string) - They creative's type ("Basic", "Email", "HTML", "Banner")

## Creative Lite (Creative Minimal)
+ `_embedded` (object)
    + campaign (Campaign Minimal) - The campaign the creative is linked to
+ size (object, optional) - The creative's width and height (Banner and HTML types only)
    + width: 468 (number)
    + height: 60 (number)
+ thumbnail (string) - URL to the creative's thumbnail image
+ url (string) - Publisher's URL for this creative (Basic and Banner types only)

## Creative Full (Creative Lite)
+ html (string) The HTML body of the creative (HTML, Banner and Email types only)
+ image (string) URL to the creative's banner image (Banner type only)
+ text (string) Text version of the creative (Email type only)

## Pixel Base (object)
+ `_links` (object)
    + self
        + href: https://affiliate.api.diablomedia.com/campaign_approvals/1 (string)
+ created: `2010-11-05T16:01:54+00:00` (string) - ISO8602 date when the pixel was created
+ id: 1 (number) - Pixel's Id
+ pixel: https://test.com (string, required) - The content of the pixel (either the URL for "url" types, or the HTML content for "html" types)
+ type: url (string) - The type of the pixel (either "url" or "html")
+ version: 1 (number) - The internal version number of this pixel (incremented when pixel is edited)

## Pixel Minimal (Pixel Base)
+ global: false (boolean) - Whether or not the pixel is global (fires for all compatible campaigns)

## Pixel Full (Pixel Minimal)
+ `_embedded` (object)
    + campaign (Campaign Minimal) - The campaign the pixel is linked to

## Pixel Full Global (Pixel Base)
+ global: true (boolean) - Whether or not the pixel is global (fires for all compatible campaigns)
+ `_embedded`: {} (object)

## Campaign Approval Minimal (object)
+ `_links` (object)
    + self
        + href: https://affiliate.api.diablomedia.com/campaign_approvals/1 (string)
+ id: 1 (number) - Approval Id
+ created: `2010-11-05T16:01:54+00:00` (string) - ISO8602 date when the approval was created
+ status: pending (string) - Approval's status (Approved, Pending, Declined, Deleted)

## Campaign Approval Lite (Campaign Approval Minimal)

## Campaign Approval Full (Campaign Approval Minimal)
+ `_embedded` (object)
    + campaign (Campaign Minimal) - The campaign the approval is for

## Category Base (object)
+ id: 1 (number) - Category Id
+ name: Category (string) - Category's Name
+ slug: category (string) - Category's Name to be used in URLs

## Category Full (Category Base)
+ `_links` (array)

## Traffic Type Base (object)
+ id: 1 (number) - Traffic Type Id
+ name: Category (string) - Traffic Type's Name
+ slug: category (string) - Traffic Type's Name to be used in URLs

## Traffic Type Full (Traffic Type Base)
+ `_links` (array)

## Contact Base (object)
+ id: 1 (number) - Contact Id
+ email: test@test.com (string) - Contact's Email Address
+ first_name: John (string) - Contact's First Name
+ last_name: Doe (string) - Contact's Last Name
+ phone: 123-555-1234 (string) - Contact's Phone Number
+ type: Primary (string) - The type of contact at the company (Executive, Primary, Technical, Accounting, etc...)
+ version: 1 (number) - The version number of this record, increments when the record is updated.

## Contact Writable (object)
+ address: 123 Main St. (string, optional) - First line of Street Address
+ address2: Apt 102 (string, optional) - Second line of Street Address
+ birthday: 05/31 (string, optional) - Month/Day of contact's birthday
+ city: Anycity (string, optional) - City of Street Address
+ country: US (string, optional) - Country of Street Address
+ fax: 123-555-1234 (string, optional) - Contact's Fax number
+ first_name: John (string, optional) - Contact's first name
+ id: 1 (number, required) - Contact's Id
+ last_name: Doe (string, optional) - Contact's last name
+ messaging: {'msn': '', 'aim': '', 'skype': '', 'yim': '', 'twitter': '', 'icq': '', 'linkedin': ''} (object, optional) - Contact's messaging accounts
+ mobile_phone: 123-555-2134 (string, optional) - Contact's mobile phone number
+ password: abc123pass (string, optional) - Update/set the password used to login
+ phone: 123-555-2233 (string, optional) - Contact's phone number
+ postal_code: 90210 (string, optional) - Postal Code of Street Address
+ region: CA (string, optional) - State/Province/Region of Street Address
+ version: 1 (number, required) - The version of the record at the time of retrieval

## Contact Lite (Contact Base)
+ `_links` (object)
    + self
        + href: https://affiliate.api.diablomedia.com/contacts/1 (string)

## Contact Full (Contact Lite)
+ address2: Apt 102 (string, optional) - Second line of Contact's Street Address
+ address: 123 Main St. (string, optional) - First line of Contact's Street Address
+ birthday: 05/31 (string, optional) - Contact's Birthday in MM/DD format
+ city: Anycity (string, optional) - City of Contact's Street Address
+ country: US (string, optional) - Country of Contact's Street Address
+ fax: 123-555-1234 (string, optional) - Contact's Fax number
+ has_password: false (boolean) - Whether or not Contact has a password set
+ messaging (object) - Object containing Contact's different IM messaging account names (MSN, AIM, YIM, Skype, etc...)
+ mobile_phone: 123-555-1234 (string, optional) - Contact's mobile phone number
+ postal_code: 12345 (string, optional) - Contact's Street Address postal code
+ region: NY (string, optional) - Region part of Contact's Street Address

## Country Base (object)
+ id: US (string) - Country ID
+ code: US (string) - Country's 2 digit ISO Code
+ name: United States (string) - Country's full name

## Country Full (Country Base)
+ `_links` (object)
    + self
        + href: https://affiliate.api.diablomedia.com/countries/US (string)

## Message Base (object)
+ id: 1 (number) - Message ID
+ author (object)
    + first_name: John (string) - Author's first name
    + last_name: Doe (string) - Author's last name
    + email: john@test.com (string) - Author's email address
+ created: `2010-11-05T16:01:54+00:00` (string) - ISO8602 date when the message was created
+ priority: info (string) - Priority level of the message
+ read: false (boolean) - Whether or not the message has been read
+ title: Test Message (string) - Title/Subject of the message
+ type: message (string) - The type of message (can be "message", "promo", "alert", "compliance")

## Message Lite (Message Base)
+ `_links` (object)
    + self
        + href: https://affiliate.api.diablomedia.com/messages/1 (string)

## Message Full (Message Lite)
+ content: <b>HTML content of message</b> (string) - The full content of the message (can contain HTML)
+ text_content: Just text content (string) - Text version of the content

## Publisher Base (object)
+ id: 10000 (number) - Publisher's Id
+ version: 1 (number) - The version of the record at the time of retrieval
+ company: Test Publisher (string) - Publisher's Company name
+ created: `2010-11-05T16:01:54+00:00` (string) - ISO8602 date when the publisher was created
+ primary_contact_id: 1 (number) - The "owning" contact record of this Publisher
+ website: http://test.com (string) - The Publisher's company website

## Publisher Lite (Publisher Base)
+ `_links` (object)
    + self
        + href: https://affiliate.api.diablomedia.com/publishers/10000 (string)
+ `_embedded` (object)
    + categories (array[Category Full]) - Offer Categories Publisher is interested in
    + traffic_types (array[Traffic Type Full]) - Traffic Types Publisher is capable of running

## Publisher Full (Publisher Base)
+ `_links` (object)
    + self
        + href: https://affiliate.api.diablomedia.com/publishers/10000 (string)
+ `_embedded` (object)
    + categories (array[Category Full]) - Offer Categories Publisher is interested in
    + traffic_types (array[Traffic Type Full]) - Traffic Types Publisher is capable of running
    + contacts (array[Contact Lite]) - Contacts linked to this publisher account
    + manager (Manager Full)

## Publisher Owned (Publisher Full)
+ payment_info (object)
    + payee: Jane Doe (string) - Payee's Name
    + payto: Personal (string) - Whether Payee is a Company or a Personal account (allowed values are Personal and Company)
    + method: Check (string) - Payment method, must be one of "Check", "Paypal" or "ACH"
    + ach_bank: Bank One (string, optional) - If method is "ACH" this must be sent, ACH Bank's name
    + ach_account: 123456 (string, optional) - If method is "ACH" this must be sent, ACH Bank's account number
    + ach_routing: 019292 (string, optional) - If method is "ACH" this must be sent, ACH Bank's routing number
    + ach_type: Checking (string, optional) - If method is "ACH" this must be sent, ACH Account type. Either "Savings" or "Checking"
    + paypal_address: test@test.com (string, optional) - If method is "Paypal" this must be sent, Paypal email address that should receive payment

## Manager Base (object)
+ id: 1 (number) - Manager's Id
+ email: test@test.com (string) - Manager's Email address
+ fax: 123-555-1234 (string) - Manager's Fax number
+ first_name: Jane (string) - Manager's first name
+ last_name: Manager (string) - Manager's last name
+ messaging (object) - Object of different messaging accounts to contact Manager
    + aim: jane123 (string) - AIM name
    + linkedin: jane123 (string) - LinkedIn name
    + twitter: @jane123 (string) - Twitter handle
    + skype: jane123 (string) - Skype name
+ mobile: 123-555-3030 (string) - Manager's mobile phone number
+ phone: 123-555-3232 (string) - Manager's phone number

## Manager Full (Manager Base)
+ `_links` (object)
    + self
        + href: https://affiliate.api.diablomedia.com/publishers/10000/manager (string)

## Transaction Base (object)
+ `_embedded` (object)
    + campaign (Campaign Minimal)
    + country (Country Full)
+ id: L1 (string) - Transaction Id
+ browser: Firefox (string) - Name of the browser from user's user-agent
+ created: `2010-11-05T16:01:54+00:00` (string) - ISO8602 date when the transaction was created
+ creative: 1 (number) - Id of the creative used in the transaction
+ `device_type`: Desktop (string) - Device type from user's user-agent, example values "Desktop", "Mobile Phone", "Tablet" (not exhaustive)
+ ip: 123.123.123.123 (string) - IP Address of user
+ revenue: 1.50 (number) - Dollar amount of transaction (US Dollars)
+ sid: 12345abc (string) - SubId sent by Publisher for this transaction
+ trx: jkjkl333 (string) - TrxId sent by Publisher for this transaction
+ type: lead (string) - Type of transaction (can be "lead", "click" or "call")

## Transaction Full (Transaction Base)
+ `_links` (object)
    + self
        + href: https://affiliate.api.diablomedia.com/transactions/L1 (string)
